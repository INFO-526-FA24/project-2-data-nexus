) +
theme_minimal()
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(treemapify)
install.packages("treemapify")
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(treemapify)
# Read the dataset
csv_files <- list.files(path = "data/", pattern = "*.csv", full.names = TRUE)
crime_data <- do.call(rbind, lapply(csv_files, read.csv))
# Summarize crimes by area
area_summary <- crime_data %>%
group_by(AREA.NAME) %>%
summarize(Crime_Count = n(), .groups = "drop") %>%
mutate(Percentage = Crime_Count / sum(Crime_Count) * 100)
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(treemapify)
# Read the dataset
csv_files <- list.files(path = "data/", pattern = "*.csv", full.names = TRUE)
crime_data <- do.call(rbind, lapply(csv_files, read.csv))
# Summarize crimes by area
area_summary <- crime_data %>%
group_by(AREA.NAME) %>%
summarize(Crime_Count = n(), .groups = "drop") %>%
mutate(Percentage = Crime_Count / sum(Crime_Count) * 100)
# Create a treemap
ggplot(area_summary, aes(
area = Crime_Count,
fill = Crime_Count,
label = paste0(AREA.NAME, "\n", Crime_Count, " (", round(Percentage, 1), "%)")
)) +
geom_treemap() +
geom_treemap_text(
fontface = "bold",
colour = "white",
place = "centre",
grow = TRUE
) +
scale_fill_gradient(low = "lightblue", high = "steelblue") +
labs(
title = "Treemap of Crimes by Area",
fill = "Crime Count"
) +
theme_minimal()
# Create a treemap
ggplot(area_summary, aes(
area = Crime_Count,
fill = Crime_Count,
label = paste0(AREA.NAME, "\n", Crime_Count, " (", round(Percentage, 1), "%)")
)) +
geom_treemap() +
geom_treemap_text(
fontface = "bold",
colour = "white",
place = "centre",
grow = TRUE
) +
scale_fill_gradient(low = "lightblue", high = "darkblue") +
labs(
title = "Treemap of Crimes by Area",
fill = "Crime Count"
) +
theme_minimal()
steelblue
# Create a treemap
ggplot(area_summary, aes(
area = Crime_Count,
fill = Crime_Count,
label = paste0(AREA.NAME, "\n", Crime_Count, " (", round(Percentage, 1), "%)")
)) +
geom_treemap() +
geom_treemap_text(
fontface = "bold",
colour = "white",
place = "centre",
grow = TRUE
) +
scale_fill_gradient(low = "lightblue", high = "steelblue") +
labs(
title = "Treemap of Crimes by Area",
fill = "Crime Count"
) +
theme_minimal()
# Summarize crimes by area
area_summary <- crime_data %>%
group_by(AREA.NAME) %>%
summarize(Crime_Count = n(), .groups = "drop") %>%
mutate(Percentage = Crime_Count / sum(Crime_Count) * 100)
# Create a treemap with consistent font size
ggplot(area_summary, aes(
area = Crime_Count,
fill = Crime_Count,
label = paste0(AREA.NAME, "\n", Crime_Count, " (", round(Percentage, 1), "%)")
)) +
geom_treemap() +
geom_treemap_text(
fontface = "bold",
colour = "white",
place = "centre",
grow = FALSE,  # Disable font resizing
size = 8       # Set a consistent font size
) +
scale_fill_gradient(low = "lightblue", high = "steelblue") +
labs(
title = "Treemap of Crimes by Area",
fill = "Crime Count"
) +
theme_minimal()
# Summarize crimes by area and sort in descending order
area_summary <- crime_data %>%
group_by(AREA.NAME) %>%
summarize(Crime_Count = n(), .groups = "drop") %>%
mutate(Percentage = Crime_Count / sum(Crime_Count) * 100) %>%
arrange(desc(Crime_Count))
# Determine text color based on Crime_Count (higher values: white, lower values: black)
area_summary <- area_summary %>%
mutate(Text_Color = ifelse(Crime_Count > median(Crime_Count), "white", "black"))
# Create a treemap with sorted data and conditional text color
ggplot(area_summary, aes(
area = Crime_Count,
fill = Crime_Count,
label = paste0(AREA.NAME, "\n", Crime_Count, " (", round(Percentage, 1), "%)")
)) +
geom_treemap() +
geom_treemap_text(
aes(colour = Text_Color),
fontface = "bold",
place = "centre",
grow = FALSE,  # Disable font resizing
size = 8       # Set a consistent font size
) +
scale_colour_identity() +  # Use text color as specified in the data
scale_fill_gradient(low = "lightblue", high = "steelblue") +
labs(
title = "Treemap of Crimes by Area (Sorted by Crime Count)",
fill = "Crime Count"
) +
theme_minimal()
# Create a treemap with sorted data and conditional text color
ggplot(area_summary, aes(
area = Crime_Count,
fill = Crime_Count,
label = paste0(AREA.NAME, "\n", Crime_Count, " (", round(Percentage, 1), "%)")
)) +
geom_treemap() +
geom_treemap_text(
aes(colour = Text_Color),
fontface = "bold",
place = "centre",
grow = FALSE,  # Disable font resizing
size = 8       # Set a consistent font size
) +
scale_colour_identity() +  # Use text color as specified in the data
scale_fill_gradient(low = "lightblue", high = "steelblue") +
labs(
title = "Treemap of Crimes by Area (Sorted by Crime Count)",
fill = "Crime Count"
) +
theme_minimal()
# Summarize crimes by area and sort in descending order
area_summary <- crime_data %>%
group_by(AREA.NAME) %>%
summarize(Crime_Count = n(), .groups = "drop") %>%
mutate(Percentage = Crime_Count / sum(Crime_Count) * 100) %>%
arrange(desc(Crime_Count))
# Create a treemap with sorted data and conditional text color
ggplot(area_summary, aes(
area = Crime_Count,
fill = Crime_Count,
label = paste0(AREA.NAME, "\n", Crime_Count, " (", round(Percentage, 1), "%)")
)) +
geom_treemap() +
geom_treemap_text(
aes(colour = Text_Color),
fontface = "bold",
place = "centre",
grow = FALSE,  # Disable font resizing
size = 8       # Set a consistent font size
) +
scale_colour_identity() +  # Use text color as specified in the data
scale_fill_gradient(low = "lightblue", high = "steelblue") +
labs(
title = "Treemap of Crimes by Area (Sorted by Crime Count)",
fill = "Crime Count"
) +
theme_minimal()
# Create a treemap with sorted data and conditional text color
ggplot(area_summary, aes(
area = Crime_Count,
fill = Crime_Count,
label = paste0(AREA.NAME, "\n", Crime_Count, " (", round(Percentage, 1), "%)")
)) +
geom_treemap() +
geom_treemap_text(
aes(colour = "black"),
fontface = "bold",
place = "centre",
grow = FALSE,  # Disable font resizing
size = 8       # Set a consistent font size
) +
scale_colour_identity() +  # Use text color as specified in the data
scale_fill_gradient(low = "lightblue", high = "steelblue") +
labs(
title = "Treemap of Crimes by Area (Sorted by Crime Count)",
fill = "Crime Count"
) +
theme_minimal()
# Create a treemap with sorted data and conditional text color
ggplot(area_summary, aes(
area = Crime_Count,
fill = Crime_Count,
label = paste0(AREA.NAME, "\n", Crime_Count, " (", round(Percentage, 1), "%)")
)) +
geom_treemap() +
geom_treemap_text(
aes(colour = "darkblue"),
fontface = "bold",
place = "centre",
grow = FALSE,  # Disable font resizing
size = 8       # Set a consistent font size
) +
scale_colour_identity() +  # Use text color as specified in the data
scale_fill_gradient(low = "lightblue", high = "steelblue") +
labs(
title = "Treemap of Crimes by Area (Sorted by Crime Count)",
fill = "Crime Count"
) +
theme_minimal()
# Create a treemap with sorted data and conditional text color
ggplot(area_summary, aes(
area = Crime_Count,
fill = Crime_Count,
label = paste0(AREA.NAME, "\n", Crime_Count, " (", round(Percentage, 1), "%)")
)) +
geom_treemap() +
geom_treemap_text(
aes(colour = "blue"),
fontface = "bold",
place = "centre",
grow = FALSE,  # Disable font resizing
size = 8       # Set a consistent font size
) +
scale_colour_identity() +  # Use text color as specified in the data
scale_fill_gradient(low = "lightblue", high = "steelblue") +
labs(
title = "Treemap of Crimes by Area (Sorted by Crime Count)",
fill = "Crime Count"
) +
theme_minimal()
# Create a treemap with sorted data and conditional text color
ggplot(area_summary, aes(
area = Crime_Count,
fill = Crime_Count,
label = paste0(AREA.NAME, "\n", Crime_Count,, "\n" "(", round(Percentage, 1), "%)")
# Create a treemap with sorted data and conditional text color
ggplot(area_summary, aes(
area = Crime_Count,
fill = Crime_Count,
label = paste0(AREA.NAME, "\n", Crime_Count, "\n", "(", round(Percentage, 1), "%)")
)) +
geom_treemap() +
geom_treemap_text(
aes(colour = "blue"),
fontface = "bold",
place = "centre",
grow = FALSE,  # Disable font resizing
size = 8       # Set a consistent font size
) +
scale_colour_identity() +  # Use text color as specified in the data
scale_fill_gradient(low = "lightblue", high = "steelblue") +
labs(
title = "Treemap of Crimes by Area (Sorted by Crime Count)",
fill = "Crime Count"
) +
theme_minimal()
# Create a treemap with sorted data and conditional text color
ggplot(area_summary, aes(
area = Crime_Count,
fill = Crime_Count,
label = paste0(AREA.NAME, "\n", Crime_Count, "\n", "(", round(Percentage, 1), "%)")
)) +
geom_treemap() +
geom_treemap_text(
aes(colour = "White"),
fontface = "bold",
place = "centre",
grow = FALSE,  # Disable font resizing
size = 8       # Set a consistent font size
) +
scale_colour_identity() +  # Use text color as specified in the data
scale_fill_gradient(low = "lightblue", high = "steelblue") +
labs(
title = "Treemap of Crimes by Area (Sorted by Crime Count)",
fill = "Crime Count"
) +
theme_minimal()
# Create a treemap with sorted data and conditional text color
ggplot(area_summary, aes(
area = Crime_Count,
fill = Crime_Count,
label = paste0(AREA.NAME, "\n", Crime_Count, "\n", "(", round(Percentage, 1), "%)")
)) +
geom_treemap() +
geom_treemap_text(
aes(colour = "cream"),
fontface = "bold",
place = "centre",
grow = FALSE,  # Disable font resizing
size = 8       # Set a consistent font size
) +
scale_colour_identity() +  # Use text color as specified in the data
scale_fill_gradient(low = "lightblue", high = "steelblue") +
labs(
title = "Treemap of Crimes by Area (Sorted by Crime Count)",
fill = "Crime Count"
) +
theme_minimal()
# Create a treemap with sorted data and conditional text color
ggplot(area_summary, aes(
area = Crime_Count,
fill = Crime_Count,
label = paste0(AREA.NAME, "\n", Crime_Count, "\n", "(", round(Percentage, 1), "%)")
)) +
geom_treemap() +
geom_treemap_text(
aes(colour = "deepturquoise"),
fontface = "bold",
place = "centre",
grow = FALSE,  # Disable font resizing
size = 8       # Set a consistent font size
) +
scale_colour_identity() +  # Use text color as specified in the data
scale_fill_gradient(low = "lightblue", high = "steelblue") +
labs(
title = "Treemap of Crimes by Area (Sorted by Crime Count)",
fill = "Crime Count"
) +
theme_minimal()
# Create a treemap with sorted data and conditional text color
ggplot(area_summary, aes(
area = Crime_Count,
fill = Crime_Count,
label = paste0(AREA.NAME, "\n", Crime_Count, "\n", "(", round(Percentage, 1), "%)")
)) +
geom_treemap() +
geom_treemap_text(
aes(colour = "darkturquoise"),
fontface = "bold",
place = "centre",
grow = FALSE,  # Disable font resizing
size = 8       # Set a consistent font size
) +
scale_colour_identity() +  # Use text color as specified in the data
scale_fill_gradient(low = "lightblue", high = "steelblue") +
labs(
title = "Treemap of Crimes by Area (Sorted by Crime Count)",
fill = "Crime Count"
) +
theme_minimal()
# Create a treemap with sorted data and conditional text color
ggplot(area_summary, aes(
area = Crime_Count,
fill = Crime_Count,
label = paste0(AREA.NAME, "\n", Crime_Count, "\n", "(", round(Percentage, 1), "%)")
)) +
geom_treemap() +
geom_treemap_text(
aes(colour = "darkslateblue"),
fontface = "bold",
place = "centre",
grow = FALSE,  # Disable font resizing
size = 8       # Set a consistent font size
) +
scale_colour_identity() +  # Use text color as specified in the data
scale_fill_gradient(low = "lightblue", high = "steelblue") +
labs(
title = "Treemap of Crimes by Area (Sorted by Crime Count)",
fill = "Crime Count"
) +
theme_minimal()
# Create a treemap with sorted data and conditional text color
ggplot(area_summary, aes(
area = Crime_Count,
fill = Crime_Count,
label = paste0(AREA.NAME, "\n", Crime_Count, "\n", "(", round(Percentage, 1), "%)")
)) +
geom_treemap(color = "white") +  # Set line color to white
geom_treemap_text(
aes(colour = "darkslateblue"),
fontface = "bold",
place = "centre",
grow = FALSE,  # Disable font resizing
size = 8       # Set a consistent font size
) +
scale_colour_identity() +  # Use text color as specified in the data
scale_fill_gradient(low = "lightblue", high = "steelblue") +
labs(
title = "Treemap of Crimes by Area (Sorted by Crime Count)",
fill = "Crime Count"
) +
theme_minimal()
# Create a treemap with sorted data and conditional text color
ggplot(area_summary, aes(
area = Crime_Count,
fill = Crime_Count,
label = paste0(AREA.NAME, "\n", Crime_Count, "\n", "(", round(Percentage, 1), "%)")
)) +
geom_treemap(color = "white") +  # Set line color to white
geom_treemap_text(
aes(colour = "darkslateblue"),
fontface = "bold",
place = "centre",
grow = FALSE,  # Disable font resizing
size = 8       # Set a consistent font size
) +
scale_colour_identity() +  # Use text color as specified in the data
scale_fill_gradient(low = "lightblue", high = "steelblue") +
labs(
title = "Crimes by Area (Sorted by Crime Count)",
fill = "Crime Count"
) +
theme_minimal()
# Create a treemap with sorted data and conditional text color
ggplot(area_summary, aes(
area = Crime_Count,
fill = Crime_Count,
label = paste0(AREA.NAME, "\n", Crime_Count, "\n", "(", round(Percentage, 1), "%)")
)) +
geom_treemap(color = "white") +  # Set line color to white
geom_treemap_text(
aes(colour = "darkslateblue"),
fontface = "bold",
place = "centre",
grow = FALSE,  # Disable font resizing
size = 10       # Set a consistent font size
) +
scale_colour_identity() +  # Use text color as specified in the data
scale_fill_gradient(low = "lightblue", high = "steelblue") +
labs(
title = "Crimes by Area",
fill = "Crime Count"
) +
theme_minimal()
# Create a treemap with sorted data and conditional text color
ggplot(area_summary, aes(
area = Crime_Count,
fill = Crime_Count,
label = paste0(AREA.NAME, "\n", Crime_Count, "\n", "(", round(Percentage, 1), "%)")
)) +
geom_treemap(color = "white") +  # Set line color to white
geom_treemap_text(
aes(colour = "darkslateblue"),
fontface = "bold",
place = "centre",
grow = FALSE,  # Disable font resizing
size = 9       # Set a consistent font size
) +
scale_colour_identity() +  # Use text color as specified in the data
scale_fill_gradient(low = "lightblue", high = "steelblue") +
labs(
title = "Crimes by Area",
fill = "Crime Count"
) +
theme_minimal()
# Create a treemap with sorted data and conditional text color
ggplot(area_summary, aes(
area = Crime_Count,
fill = Crime_Count,
label = paste0(AREA.NAME, "\n", Crime_Count, "\n", "(", round(Percentage, 1), "%)")
)) +
geom_treemap(color = "white") +  # Set line color to white
geom_treemap_text(
aes(colour = "darkslateblue"),
fontface = "bold",
place = "centre",
grow = FALSE,  # Disable font resizing
size = 8      # Set a consistent font size
) +
scale_colour_identity() +  # Use text color as specified in the data
scale_fill_gradient(low = "lightblue", high = "steelblue") +
labs(
title = "Crimes by Area",
fill = "Crime Count"
) +
theme_minimal()
# Create a treemap with sorted data and conditional text color
ggplot(area_summary, aes(
area = Crime_Count,
fill = Crime_Count,
label = paste0(AREA.NAME, "\n", Crime_Count, "\n", "(", round(Percentage, 1), "%)")
)) +
geom_treemap(color = "white") +  # Set line color to white
geom_treemap_text(
aes(colour = "darkslateblue"),
fontface = "bold",
place = "centre",
grow = FALSE,  # Disable font resizing
size = 8      # Set a consistent font size
) +
scale_colour_identity() +  # Use text color as specified in the data
scale_fill_gradient(low = "aliceblue", high = "steelblue") +
labs(
title = "Crimes by Area",
fill = "Crime Count"
) +
theme_minimal()
