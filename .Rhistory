# Install required packages
if (!requireNamespace("sf", quietly = TRUE)) install.packages("sf")
if (!requireNamespace("ggplot2", quietly = TRUE)) install.packages("ggplot2")
# Load required libraries
library(sf)
library(ggplot2)
# Get a shapefile for Los Angeles
# Load the US shapefile and filter for Los Angeles
# This example assumes you have access to US boundary data
la_map <- st_as_sf(maps::map("county", "california,los angeles", plot = FALSE, fill = TRUE))
# Plot the map
ggplot(data = la_map) +
geom_sf(fill = "lightblue", color = "black") +
ggtitle("Map of Los Angeles") +
theme_minimal()
if (!requireNamespace("osmdata", quietly = TRUE)) install.packages("osmdata")
# Load required libraries
library(sf)
library(ggplot2)
library(osmdata)
# Get a shapefile for Los Angeles county
la_map <- st_as_sf(maps::map("county", "california,los angeles", plot = FALSE, fill = TRUE))
# Get major cities data using OpenStreetMap
bbox <- st_bbox(la_map) # Get the bounding box for Los Angeles County
cities_data <- opq(bbox = bbox) %>%
add_osm_feature(key = "place", value = "city") %>%
osmdata_sf()
# Extract city points
city_points <- cities_data$osm_points
# Plot the map with city outlines
ggplot(data = la_map) +
geom_sf(fill = "lightblue", color = "black") + # Map of Los Angeles County
geom_sf(data = city_points, color = "red", size = 2, shape = 21, fill = "yellow") + # Major cities
ggtitle("Map of Los Angeles with Major Cities") +
theme_minimal()
library(osmdata)
# Get a shapefile for Los Angeles county
la_map <- st_as_sf(maps::map("county", "california,los angeles", plot = FALSE, fill = TRUE))
# Get major cities data using OpenStreetMap
bbox <- st_bbox(la_map) # Get the bounding box for Los Angeles County
cities_data <- opq(bbox = bbox) %>%
add_osm_feature(key = "place", value = "city") %>%
osmdata_sf()
# Extract city points
city_points <- cities_data$osm_points
# Plot the map with city outlines
ggplot(data = la_map) +
geom_sf(fill = "lightblue", color = "black") + # Map of Los Angeles County
geom_sf(data = city_points, color = "red", size = 2, shape = 21, fill = "yellow") + # Major cities
ggtitle("Map of Los Angeles with Major Cities") +
theme_minimal()
# Install required packages
if (!requireNamespace("sf", quietly = TRUE)) install.packages("sf")
if (!requireNamespace("ggplot2", quietly = TRUE)) install.packages("ggplot2")
if (!requireNamespace("maps", quietly = TRUE)) install.packages("maps")
if (!requireNamespace("ggrepel", quietly = TRUE)) install.packages("ggrepel")
# Load required libraries
library(sf)
library(ggplot2)
library(maps)
library(ggrepel)
# Get the shapefile for Los Angeles County
la_map <- st_as_sf(maps::map("county", "california,los angeles", plot = FALSE, fill = TRUE))
# Add major cities data
# A data frame for cities and coordinates
cities <- data.frame(
name = c("Los Angeles", "Santa Monica", "Long Beach", "Beverly Hills", "Pasadena"),
lon = c(-118.2437, -118.4912, -118.1937, -118.4004, -118.1445),
lat = c(34.0522, 34.0195, 33.7701, 34.0736, 34.1478)
)
# Plot the map with cities
ggplot(data = la_map) +
geom_sf(fill = "lightblue", color = "black") +
geom_point(data = cities, aes(x = lon, y = lat), color = "red", size = 3) +
geom_text_repel(data = cities, aes(x = lon, y = lat, label = name), size = 4, fontface = "bold") +
ggtitle("Map of Los Angeles with Major Cities") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
##################################################################################################################################
###########   Question 1: What are the most common types of crimes and high-risk areas in Los Angeles?  ##########################
##################################################################################################################################
# Load necessary libraries
library(sf)
library(tigris)
library(ggplot2)
# Set options for tigris
options(tigris_class = "sf", tigris_use_cache = TRUE)
# Get shapefile for Los Angeles County
# You can use the tigris `places` function to get city boundaries
la_shapefile <- places(state = "CA", cb = TRUE) %>%
filter(NAME == "Los Angeles") # Filter for Los Angeles city
library(sf)
library(tigris)
library(ggplot2)
# Set options for tigris
options(tigris_class = "sf", tigris_use_cache = TRUE)
# Get shapefile for Los Angeles County
# You can use the tigris `places` function to get city boundaries
la_shapefile <- places(state = "CA", cb = TRUE) %>%
filter(NAME == "Los Angeles") # Filter for Los Angeles city
##################################################################################################################################
# Load necessary libraries
library(sf)
library(tigris)
library(ggplot2)
# Set options for tigris
options(tigris_class = "sf", tigris_use_cache = TRUE)
# Get shapefile for Los Angeles County
# You can use the tigris `places` function to get city boundaries
la_shapefile <- places(state = "CA", cb = TRUE) %>%
filter(NAME == "Los Angeles") # Filter for Los Angeles city
library(tigris)
library(ggplot2)
# Set options for tigris
options(tigris_class = "sf", tigris_use_cache = TRUE)
# Get shapefile for Los Angeles County
# You can use the tigris `places` function to get city boundaries
la_shapefile <- places(state = "CA", cb = TRUE) %>%
filter(NAME == "Los Angeles") # Filter for Los Angeles city
##################################################################################################################################
###########   Question 1: What are the most common types of crimes and high-risk areas in Los Angeles?  ##########################
##################################################################################################################################
# Load necessary libraries
library(sf)
library(tigris)
library(ggplot2)
library(dplyr) # For filtering
# Set options for tigris
options(tigris_class = "sf", tigris_use_cache = TRUE)
# Fetch shapefile data for California places
la_shapefile <- places(state = "CA", cb = TRUE)
# Verify structure and filter for Los Angeles
la_shapefile <- la_shapefile %>%
filter(NAME == "Los Angeles")
# Check the structure of the data
print(st_geometry(la_shapefile))
# Plot the map with ggplot2
ggplot(data = la_shapefile) +
geom_sf(fill = "lightblue", color = "darkblue", linewidth = 0.5) +
ggtitle("Borders of Los Angeles") +
theme_minimal()
# Load necessary libraries
library(sf)
library(tigris)
library(ggplot2)
library(dplyr)
# Load necessary libraries
library(sf)
library(tigris)
library(ggplot2)
library(dplyr)
library(readr) # For reading CSV files
# Set options for tigris
options(tigris_class = "sf", tigris_use_cache = TRUE)
# Step 1: Fetch Los Angeles city shapefile
la_shapefile <- places(state = "CA", cb = TRUE) %>%
filter(NAME == "Los Angeles")
# Step 2: Read the CSV file containing longitude and latitude
# Replace 'your_file.csv' with the actual path to your CSV file
# Ensure the CSV has columns named 'longitude' and 'latitude'
csv_data <- read_csv("Crime_Data_from_2020_to_Present.csv")
csv_files <- list.files(path = "data/", pattern = "*.csv", full.names = TRUE)
# Read and combine all CSV files into one data frame
csv_data <- do.call(rbind, lapply(csv_files, read.csv))
# Step 3: Convert the longitude and latitude into an sf object
points_sf <- st_as_sf(csv_data, coords = c("LON", "LAT"), crs = 4326)
# Step 4: Plot the map with Los Angeles boundaries and points
ggplot() +
geom_sf(data = la_shapefile, fill = "lightblue", color = "darkblue", linewidth = 0.5) +
geom_sf(data = points_sf, color = "red", size = 2) + # Add points in red
ggtitle("Los Angeles Map with Points") +
theme_minimal()
# Step 4: Plot the map with Los Angeles boundaries and points
ggplot() +
geom_sf(data = la_shapefile, fill = "lightblue", color = "darkblue", linewidth = 0.5) +
geom_sf(data = points_sf, color = "red", size = 2) + # Add points in red
ggtitle("Los Angeles Map with Points") +
theme_minimal()
# Load necessary libraries
library(sf)
library(tigris)
library(ggplot2)
library(dplyr)
library(readr) # For reading CSV files
# Set options for tigris
options(tigris_class = "sf", tigris_use_cache = TRUE)
# Step 1: Fetch Los Angeles city shapefile
la_shapefile <- places(state = "CA", cb = TRUE) %>%
filter(NAME == "Los Angeles")
# Step 2: Read the CSV file containing longitude and latitude
csv_files <- list.files(path = "data/", pattern = "*.csv", full.names = TRUE)
# Read and combine all CSV files into one data frame
csv_data <- do.call(rbind, lapply(csv_files, read.csv))
# Step 3: Filter out rows where LON and LAT are 0
filtered_data <- csv_data %>%
filter(LON != 0, LAT != 0)
points_sf <- st_as_sf(filtered_data, coords = c("LON", "LAT"), crs = 4326)
# Step 3: Convert the longitude and latitude into an sf object
points_sf <- st_transform(points_sf, st_crs(la_shapefile))
# Step 6: Plot the Los Angeles map with points
ggplot() +
geom_sf(data = la_shapefile, fill = "lightblue", color = "darkblue", linewidth = 0.5) +
geom_sf(data = points_sf, color = "red", size = 2, alpha = 0.8) +
ggtitle("Map of Los Angeles with Points") +
theme_minimal()
# Set options for tigris
options(tigris_class = "sf", tigris_use_cache = TRUE)
# Step 1: Fetch Los Angeles city shapefile
la_shapefile <- places(state = "CA", cb = TRUE) %>%
filter(NAME == "Los Angeles")
# Step 2: Read and combine all CSV files into one data frame
csv_files <- list.files(path = "data/", pattern = "*.csv", full.names = TRUE)
csv_data <- do.call(rbind, lapply(csv_files, read.csv))
# Step 3: Filter out rows where LON and LAT are 0
filtered_data <- csv_data %>%
filter(LON != 0, LAT != 0)
# Step 4: Identify top 5 crimes in "Crm Cd Desc"
top_crimes <- filtered_data %>%
count("Crm Cd Desc", sort = TRUE) %>%
top_n(5, n) %>%
pull("Crm Cd Desc")
# Step 4: Identify top 5 crimes in "Crm Cd Desc"
top_crimes <- filtered_data %>%
count(Crm.Cd.Desc, sort = TRUE) %>%
top_n(5, n) %>%
pull(Crm.Cd.Desc)
# Step 5: Filter data for only the top 5 crimes
filtered_top_crimes <- filtered_data %>%
filter(Crm.Cd.Desc %in% top_crimes)
# Step 6: Convert filtered data to an sf object
points_sf <- st_as_sf(filtered_top_crimes, coords = c("LON", "LAT"), crs = 4326)
# Step 7: Transform coordinate system to match Los Angeles shapefile
points_sf <- st_transform(points_sf, st_crs(la_shapefile))
# Step 8: Plot the map with points categorized by crime
ggplot() +
geom_sf(data = la_shapefile, fill = "lightblue", color = "darkblue", linewidth = 0.5) +
geom_sf(data = points_sf, aes(color = Crm.Cd.Desc), size = 2, alpha = 0.8) +
scale_color_viridis_d(name = "Crime Type") +
ggtitle("Map of Los Angeles with Top 5 Crimes") +
theme_minimal()
# Set options for tigris
options(tigris_class = "sf", tigris_use_cache = TRUE)
# Step 1: Fetch Los Angeles city shapefile
la_shapefile <- places(state = "CA", cb = TRUE) %>%
filter(NAME == "Los Angeles")
# Step 2: Read and combine all CSV files into one data frame
csv_files <- list.files(path = "data/", pattern = "*.csv", full.names = TRUE)
csv_data <- do.call(rbind, lapply(csv_files, read.csv))
# Step 3: Replace specific value in "Crm Cd Desc"
csv_data <- csv_data %>%
mutate(Crm.Cd.Desc = str_replace(
Crm.Cd.Desc,
"VANDALISM - FELONY \\(\\$400 & OVER, ALL CHURCH VANDALISMS\\)",
"VANDALISM - FELONY"
))
# Load necessary libraries
library(sf)
library(tigris)
library(ggplot2)
library(dplyr)
library(stringr)
library(readr)
# Set options for tigris
options(tigris_class = "sf", tigris_use_cache = TRUE)
# Step 1: Fetch Los Angeles city shapefile
la_shapefile <- places(state = "CA", cb = TRUE) %>%
filter(NAME == "Los Angeles")
# Step 2: Read and combine all CSV files into one data frame
csv_files <- list.files(path = "data/", pattern = "*.csv", full.names = TRUE)
csv_data <- do.call(rbind, lapply(csv_files, read.csv))
# Step 3: Replace specific value in "Crm Cd Desc"
csv_data <- csv_data %>%
mutate(Crm.Cd.Desc = str_replace(
Crm.Cd.Desc,
"VANDALISM - FELONY \\(\\$400 & OVER, ALL CHURCH VANDALISMS\\)",
"VANDALISM - FELONY"
))
# Step 4: Filter out rows where LON and LAT are 0
filtered_data <- csv_data %>%
filter(LON != 0, LAT != 0)
# Step 5: Identify top 5 crimes in "Crm Cd Desc"
top_crimes <- filtered_data %>%
count(Crm.Cd.Desc, sort = TRUE) %>%
top_n(5, n) %>%
pull(Crm.Cd.Desc)
# Step 6: Filter data for only the top 5 crimes
filtered_top_crimes <- filtered_data %>%
filter(Crm.Cd.Desc %in% top_crimes)
# Step 7: Convert filtered data to an sf object
points_sf <- st_as_sf(filtered_top_crimes, coords = c("LON", "LAT"), crs = 4326)
# Step 8: Transform coordinate system to match Los Angeles shapefile
points_sf <- st_transform(points_sf, st_crs(la_shapefile))
# Step 9: Plot the map with points categorized by crime
ggplot() +
geom_sf(data = la_shapefile, fill = "lightblue", color = "darkblue", linewidth = 0.5) +
geom_sf(data = points_sf, aes(color = Crm.Cd.Desc), size = 2, alpha = 0.8) +
scale_color_viridis_d(name = "Crime Type") +
ggtitle("Map of Los Angeles with Top 5 Crimes") +
theme_minimal() +
theme(
legend.position = "bottom",        # Move legend to the bottom
legend.title = element_text(size = 10), # Customize legend title size
legend.text = element_text(size = 9),   # Customize legend text size
legend.box = "horizontal"         # Arrange legend horizontally
)
# Load necessary libraries
library(sf)
library(tigris)
library(ggplot2)
library(dplyr)
library(stringr) # For string manipulation
library(readr) # For reading CSV files
# Set options for tigris
options(tigris_class = "sf", tigris_use_cache = TRUE)
# Step 1: Read and combine all CSV files into one data frame
csv_files <- list.files(path = "data/", pattern = "*.csv", full.names = TRUE)
csv_data <- do.call(rbind, lapply(csv_files, read.csv))
# Step 2: Replace specific value in "Crm Cd Desc"
csv_data <- csv_data %>%
mutate(Crm.Cd.Desc = str_replace(
Crm.Cd.Desc,
"VANDALISM - FELONY \\(\\$400 & OVER, ALL CHURCH VANDALISMS\\)",
"VANDALISM - FELONY"
))
# Step 3: Filter out rows where LON and LAT are 0
filtered_data <- csv_data %>%
filter(LON != 0, LAT != 0)
# Step 4: Identify top 5 crimes in "Crm Cd Desc"
top_crimes <- filtered_data %>%
count(Crm.Cd.Desc, sort = TRUE) %>%
top_n(5, n)
# Step 5: Create a bar plot for the top 5 crimes
ggplot(top_crimes, aes(x = reorder(Crm.Cd.Desc, n), y = n, fill = Crm.Cd.Desc)) +
geom_bar(stat = "identity") +
coord_flip() + # Flip coordinates to make horizontal bars
scale_fill_viridis_d(name = "Crime Type") +
labs(
title = "Top 5 Crimes in Los Angeles",
x = "Crime Type",
y = "Number of Incidents"
) +
theme_minimal() +
theme(
legend.position = "none",        # Hide legend for this plot
plot.title = element_text(size = 14, face = "bold"),
axis.title = element_text(size = 12)
)
